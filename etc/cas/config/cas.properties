#----- Server Properties -----#
cas.server.name=https://example.org:8443
cas.server.prefix=${cas.server.name}/cas
cas.server.scope=example.org
logging.config=file:/etc/cas/config/log4j2.xml
server.ssl.enabled=true
server.ssl.keyStore=file:/etc/cas/thekeystore
server.ssl.keyStorePassword=changeit
server.ssl.keyPassword=changeit
cas.authn.accept.enabled=false
server.port=8443

#----- Security Properties -----#
cas.webflow.crypto.signing.key=vDFxl4SPGGnPo-s7DXAM0RK2tYDVWSOMkTezoirgm1nHm6XcgYW5yK0iYTa_imC8B2gF9eiELDhXmRO50V2p3g
cas.webflow.crypto.encryption.key=rPHl4MIZmj-9jw7i9x1LWg
cas.tgc.crypto.signing.key=tnW0pc9CnnuPU_GNrHFdHG4-wEpizblTpwzbsAmgLrS5AbZTtPJw7BhAlGXDtPxdcF58o7dtCRPrhuJI0uVSJQ
cas.tgc.crypto.encryption.key=vm2uhYFCNK4EcyhGbbkesKySjBScO1-5V0MVNu5kL1s

#----- JDBC Authentication Properties -----#
#cas.authn.jdbc.query[0].sql=SELECT password FROM public.users WHERE username=?
#cas.authn.jdbc.query[0].driver-class=org.postgresql.Driver
#cas.authn.jdbc.query[0].field-password=password
#cas.authn.jdbc.query[0].password-encoder.encoding-algorithm=MD5
#cas.authn.jdbc.query[0].password-encoder.type=BCRYPT
#cas.authn.jdbc.query[0].url=jdbc:postgresql://database:5432/cas
#cas.authn.jdbc.query[0].default-schema=public
#cas.authn.jdbc.query[0].user=casuser
#cas.authn.jdbc.query[0].password=caspassword
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.PostgreSQLDialect

#----- JDBC Attributes Repository Properties -----#
#cas.authn.attribute-repository.jdbc[0].driver-class=org.postgresql.Driver
#cas.authn.attribute-repository.jdbc[0].user=casuser
#cas.authn.attribute-repository.jdbc[0].password=caspassword
#cas.authn.attribute-repository.jdbc[0].default-schema=public
#cas.authn.attribute-repository.jdbc[0].username=username
#cas.authn.attribute-repository.jdbc[0].url=jdbc:postgresql://database:5432/cas
#cas.authn.attribute-repository.jdbc[0].dialect=org.hibernate.dialect.PostgreSQLDialect
#cas.authn.attribute-repository.jdbc[0].id=JdbcAttr
#cas.authn.attribute-repository.jdbc[0].state=ACTIVE

#cas.authn.attributeRepository.jdbc[0].singleRow=true
#cas.authn.attribute-repository.jdbc[0].sql=SELECT u.username, u.uid, u.email, u.first_name, u.last_name, u.mobile_number, u.user_role, string_agg(s.service_name, ', ') AS service_names FROM users u JOIN user_service us ON u.uid = us.id_user JOIN services s ON us.id_service = s.sid WHERE {0} GROUP BY  u.uid, u.email, u.first_name, u.last_name, u.mobile_number
#cas.authn.attribute-repository.jdbc[0].attributes.uid=uid
#cas.authn.attribute-repository.jdbc[0].attributes.user_role=user_role
#cas.authn.attribute-repository.jdbc[0].attributes.first_name=given_name
#cas.authn.attribute-repository.jdbc[0].attributes.last_name=family_name
#cas.authn.attribute-repository.jdbc[0].attributes.username=username
#cas.authn.attribute-repository.jdbc[0].attributes.email=email
#cas.authn.attribute-repository.jdbc[0].attributes.mobile_number=mobile_number
#cas.authn.attribute-repository.jdbc[0].attributes.service_names=service_names
